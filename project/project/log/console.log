# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 1[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (39): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.1 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 1.5 [s]
# SLP: Finished : 1.6 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 1.8 [s].
# KERNEL: SLP loading done - time: 0.1 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  1:36 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =107
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =108
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =109
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 1.0 [s]
# SLP: Finished : 1.0 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 1.1 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  1:40 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 1[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  1:41 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
run
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  2:42 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  2:42 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:22 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:22 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:23 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.6 [s]
# SLP: Finished : 0.6 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.7 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:40 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:41 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.6 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:41 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:42 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:42 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.6 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.6 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:43 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Error: VCP2000 project.v : (11, 12): Syntax error. Unexpected token: if[_IF].
# Compile failure 1 Errors 0 Warnings  Analysis time: 0[s].
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (42): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:44 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:45 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:45 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  1
# KERNEL: result = 10101010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (42): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:46 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  1
# KERNEL: result = 10101010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (42): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:46 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (42): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:46 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:47 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10011010 <and> expectedResult = 10101010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:48 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =106
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:48 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:48 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 1[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:51 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:51 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 1[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:52 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 00111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 00111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:57 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 11111010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 33
# KERNEL: result = 11111010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00001010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00001010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 01011010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 35
# KERNEL: result = 01011010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 10101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 10101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 11111010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 11111010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00001010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00001010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 01011010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 01011010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 10101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 10101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 11111010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 11111010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00001010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00001010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 01011010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 01011010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 10101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 10101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 11111010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 11111010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 00001010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 00001010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 01011010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 01011010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101010 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101010 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 11111010 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 11111010 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 00001010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 50
# KERNEL: result = 00001010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 01011010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 01011010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10101010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10101010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 11111010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 11111010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 00001010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 00001010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 01011010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 01011010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10101010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10101010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 11111010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 11111010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 00001010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 00001010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 01011010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 01011010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10101010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10101010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 11111010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 11111010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 00001010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 00001010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 01011010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 01011010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10101010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10101010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 11111010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 65
# KERNEL: result = 11111010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 00001010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 00001010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 01011010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 67
# KERNEL: result = 01011010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10101010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10101010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 11111010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 11111010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 00001010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 00001010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 01011010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 01011010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10101010 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 72
# KERNEL: result = 10101010 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 11111010 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 11111010 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 00001010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 74
# KERNEL: result = 00001010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 01011010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 01011010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 11111010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 11111010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 00001010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 00001010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 01011010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 01011010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 11111010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 11111010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 00001010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 00001010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 01011010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 01011010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 11111010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 11111010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 00001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 00001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 01011010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 87
# KERNEL: result = 01011010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10101010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10101010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 11111010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 89
# KERNEL: result = 11111010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 00001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 00001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 01011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 01011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10101010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10101010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 11111010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 11111010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 00001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 00001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 01011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 01011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10101010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10101010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 11111010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 11111010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 00001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 00001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 01011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 01011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10101010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10101010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 11111010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 11111010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 00001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 00001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 01011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 01011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =104
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 11111010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 11111010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 00001010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 00001010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 01011010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 01011010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 10101010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 10101010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 10101010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 01011010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6413 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:59 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00101010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 01101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 10101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101111 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10100000 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100001 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100111 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10101000 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101001 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10001010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:59 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6413 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  3:59 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00101010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00101010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 01101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 01101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 10101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 10101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101111 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101111 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10100000 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10100000 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100001 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100001 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100111 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100111 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10101000 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10101000 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101001 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101001 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10001010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10001010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6413 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:00 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00101010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 01101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 10101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101111 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10100000 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100001 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100111 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10101000 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101001 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10001010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6413 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:00 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00101010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00101010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 01101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 01101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 10101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 10101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101111 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101111 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10100000 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10100000 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100001 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100001 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100111 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100111 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10101000 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10101000 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101001 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101001 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10001010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10001010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6413 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:00 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 00001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00101010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00101010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 01101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 01101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 10101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 10101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101111 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101111 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10100000 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10100000 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100001 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100001 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100111 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100111 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10101000 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10101000 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101001 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101001 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10001010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10001010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10011010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6413 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:34 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =107
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =107
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.6 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6413 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:35 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:35 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:37 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00011010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00011010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00101010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00101010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 01101010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 01101010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 10101111
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 10101111
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 10100000
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 10100000
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 10100001
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 10011010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 10011010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 11111010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 11111010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10011010
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10011010
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 11111010
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 11111010
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10011010
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10011010
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = xxxxxxxx
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 11111010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 00011010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 00101010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 00101010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 01101010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 01101010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10101111
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10101111
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10100000
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10100000
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10100001
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10100001
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10100010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10100010
# KERNEL: fulty when counter =107
# KERNEL: result = 10101010 <and> expectedResult = 10100111
# KERNEL: fulty when counter =107
# KERNEL: result = 10101010 <and> expectedResult = 10100111
# KERNEL: fulty when counter =108
# KERNEL: result = 11111010 <and> expectedResult = 10101000
# KERNEL: fulty when counter =108
# KERNEL: result = 11111010 <and> expectedResult = 10101000
# KERNEL: fulty when counter =109
# KERNEL: result = 11111010 <and> expectedResult = 10101001
# KERNEL: fulty when counter =109
# KERNEL: result = 11111010 <and> expectedResult = 10101001
# KERNEL: fulty when counter =110
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =110
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:37 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Error: VCP2000 project.v : (66, 21): Syntax error. Unexpected token: 150ps[_UNSIGNED_TIME_NUMBER].
# Compile failure 1 Errors 0 Warnings  Analysis time: 0[s].
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Finished. Using existing simulator library
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.0 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:38 PM, Friday, January 27, 2023
#  Simulation has been initialized
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:38 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =107
# KERNEL: result = 10101010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.1 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:39 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5849 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:40 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6411 kB (elbread=427 elab2=5850 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:42 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 10101010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:43 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:44 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:44 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Error: VCP2980 project.v : (48, 1): Variable 'go' cannot be driven by both procedural and continuous assignment.
# Error: VCP2980 project.v : (49, 1): Variable 'go' cannot be driven by both procedural and continuous assignment.
# Error: VCP2980 project.v : (50, 1): Variable 'rst' cannot be driven by both procedural and continuous assignment.
# Error: VCP2980 project.v : (51, 1): Variable 'rst' cannot be driven by both procedural and continuous assignment.
# Compile failure 4 Errors 0 Warnings  Analysis time: 0[s].
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:55 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6412 kB (elbread=427 elab2=5851 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:55 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:57 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 1[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:58 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.6 [s]
# SLP: Finished : 0.7 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.7 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6414 kB (elbread=427 elab2=5853 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  4:59 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6414 kB (elbread=427 elab2=5853 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:00 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6417 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:01 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6417 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:03 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Error: VCP5103 project.v : (10, 64): Undeclared identifier: go.
# Compile failure 1 Errors 0 Warnings  Analysis time: 0[s].
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (42): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6417 kB (elbread=427 elab2=5856 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:05 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 10101010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00001010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00011010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 00101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 01101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101010 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10101111 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100000 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100001 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100010 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10100111 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101000 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101001 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10101010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10111010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10001010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10011010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 10101010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (42): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6417 kB (elbread=427 elab2=5856 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:06 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 10101010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 11111010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00001010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00011010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 00101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 01101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101010 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10101111 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100000 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100001 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100010 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10100111 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101000 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101001 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10101010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10111010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10001010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10011010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6417 kB (elbread=427 elab2=5856 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:08 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
endsim
# VSIM: Simulation has finished.
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:10 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:11 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6417 kB (elbread=427 elab2=5856 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:12 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:13 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 7 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6420 kB (elbread=427 elab2=5859 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:15 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:15 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5853 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:38 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:39 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:40 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
run
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 46 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5853 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:42 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 1[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5853 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:43 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6414 kB (elbread=427 elab2=5853 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:53 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 1[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:53 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 1[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:53 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:55 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.5 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.6 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  5:56 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Warning: project.v (41): Length of connection (1) does not match the length of port "error" (7) on instance "/traffic_light_TB/AZ".
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6416 kB (elbread=427 elab2=5855 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  6:01 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  5
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  6
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  7
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  8
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter =  9
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 10
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 11
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 12
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 13
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 14
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 15
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 16
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 17
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 18
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 19
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 20
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 21
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 22
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 23
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 24
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 25
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 26
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 27
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 28
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 29
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 30
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 31
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 32
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: fulty when counter = 33
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 34
# KERNEL: result = 00011010 <and> expectedResult = 00011010
# KERNEL: fulty when counter = 35
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 36
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 37
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 38
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 39
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 40
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 41
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 42
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 43
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 44
# KERNEL: result = 00101010 <and> expectedResult = 00101010
# KERNEL: fulty when counter = 45
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 46
# KERNEL: result = 01101010 <and> expectedResult = 01101010
# KERNEL: fulty when counter = 47
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 48
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 49
# KERNEL: result = 10101111 <and> expectedResult = 10101111
# KERNEL: fulty when counter = 50
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 51
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 52
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 53
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 54
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 55
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 56
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 57
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 58
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 59
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 60
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 61
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 62
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 63
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 64
# KERNEL: result = 10100000 <and> expectedResult = 10100000
# KERNEL: fulty when counter = 65
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 66
# KERNEL: result = 10100001 <and> expectedResult = 10100001
# KERNEL: fulty when counter = 67
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 68
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 69
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 70
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 71
# KERNEL: result = 10100010 <and> expectedResult = 10100010
# KERNEL: fulty when counter = 72
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 73
# KERNEL: result = 10100111 <and> expectedResult = 10100111
# KERNEL: fulty when counter = 74
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 75
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 76
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 77
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 78
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 79
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 80
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 81
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 82
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 83
# KERNEL: result = 10101000 <and> expectedResult = 10101000
# KERNEL: fulty when counter = 84
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 85
# KERNEL: result = 10101001 <and> expectedResult = 10101001
# KERNEL: fulty when counter = 86
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter = 87
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 88
# KERNEL: result = 10111010 <and> expectedResult = 10111010
# KERNEL: fulty when counter = 89
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 90
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 91
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 92
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 93
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 94
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 95
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 96
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 97
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 98
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter = 99
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =100
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =101
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =102
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =103
# KERNEL: result = 10001010 <and> expectedResult = 10001010
# KERNEL: fulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =105
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =106
# KERNEL: result = 10011010 <and> expectedResult = 10011010
# KERNEL: fulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  0
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5853 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  6:21 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5853 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  6:30 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.2 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5853 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  6:35 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: faulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101000
# KERNEL: faulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: faulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  6:36 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: faulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101000
# KERNEL: faulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: faulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: faulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: faulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  6:36 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: faulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101000
# KERNEL: faulty when counter =  1
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: faulty when counter =  2
# KERNEL: result = 11111010 <and> expectedResult = 11111010
# KERNEL: faulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: faulty when counter =  4
# KERNEL: result = 00001010 <and> expectedResult = 00001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  6:37 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: faulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101000
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  7:47 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.5 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  7:48 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: faulty when counter =  0
# KERNEL: result = 10101010 <and> expectedResult = 10101000
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.3 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.3 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  7:50 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: faulty when counter =  3
# KERNEL: result = 00001010 <and> expectedResult = 11001010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.4 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.5 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  7:52 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: faulty when counter =104
# KERNEL: result = 10011010 <and> expectedResult = 11111010
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
endsim
# VSIM: Simulation has finished.
alog -O2 -sve -msg 5 -sv2k12 -work project $dsn/src/project.v
# Pass 1. Scanning modules hierarchy.
# Info: VCP2113 Module \$root found in current working library.
# Pass 2. Processing instantiations.
# Pass 3. Processing behavioral statements.
# Running Optimizer.
# ELB/DAG code generating.
# Info: VCP2113 Module \$root found in current working library.
# Unit top modules: traffic_light_TB.
# $root top modules: traffic_light_TB.
# Compile success 0 Errors 0 Warnings  Analysis time: 0[s].
# Warning: ALOG: The source is compiled without the -dbg switch. Line breakpoints and assertion debug will not be available.
# done
asim -O5 +access +w_nets +access +r +access +r+w traffic_light_TB
# ELBREAD: Elaboration process.
# ELBREAD: Elaboration time 0.0 [s].
# VSIM: Stack memory: 32MB
# VSIM: Retval memory: 32MB
# 
# KERNEL: Main thread initiated.
# KERNEL: Kernel process initialization phase.
# ELAB2: Elaboration final pass...
# ELAB2: Create instances ...
# KERNEL: Time resolution set to 1ps.
# ELAB2: Create instances complete.
# SLP: Started
# SLP: Elaboration phase ...
# SLP: Elaboration phase ... done : 0.0 [s]
# SLP: Generation phase ...
# SLP: Generation phase ... done : 0.3 [s]
# SLP: Finished : 0.4 [s]
# SLP: 0 primitives and 6 (100.00%) other processes in SLP
# SLP: 0 signals in SLP and 45 (100.00%) interface signals
# ELAB2: Elaboration final pass complete - time: 0.4 [s].
# KERNEL: SLP loading done - time: 0.0 [s].
# KERNEL: Warning: You are using the Active-HDL Student Edition. The performance of simulation is running at a reduced rate.
# KERNEL: Warning: Contact Aldec for available upgrade options - sales@aldec.com.
# KERNEL: SLP simulation initialization done - time: 0.0 [s].
# KERNEL: Kernel process initialization done.
# Allocation: Simulator allocated 6415 kB (elbread=427 elab2=5854 kernel=134 sdf=0)
# KERNEL: ASDB file was created in location C:\Users\thinkpad\OneDrive\birzeit\year4-semester-1\ENCS3310 Advanced Digital Systems Design\project\project\project\src\wave.asdb
#  7:54 PM, Friday, January 27, 2023
#  Simulation has been initialized
run
# KERNEL: fault free
# KERNEL: Simulation has finished. There are no more test vectors to simulate.
